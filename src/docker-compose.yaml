version: "3.8"

services:
  nginx:
    image: nginx:1.19.2
    container_name: nginx
    volumes:
      - ./nginx/configs/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      async_api:
        condition: service_started
    ports:
      - "80:80"

  async_api:
    build: ./
    container_name: async_api
    restart: always
    expose:
      - "8000"
    env_file:
      - .environments.stage/.env.async_api.stage
    depends_on:
      redis:
        condition: service_started

  elasticsearch:
    image: elasticsearch:8.4.1
    platform: linux/amd64
    container_name: elasticsearch
    restart: always
    expose:
      - "9200"
    env_file:
      - ./.environments.stage/.env.elastic.stage
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15.0-alpine
    env_file:
      - ./.environments.stage/.env.postgres.stage
    ports:
      - "5432"
    volumes:
      - postgres_data.stage:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d movies_database"]
      interval: 5s
      retries: 5
      timeout: 5s

  redis:
    image: redis:7.0.8
    container_name: redis
    volumes:
      - ./redis:/usr/local/etc/redis
      - ./redis/dumps/:/data
    restart: always
    ports:
      - "6379"

  etl:
    build: git@github.com:Vadim3x4/new_admin_panel_sprint_3.git#main:etl
    container_name: etl
    restart: always
    env_file:
      - .environments.stage/.env.etl.stage
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

volumes:
  postgres_data.stage: